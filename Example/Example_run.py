import numpy as np

from Code_source.Utils import general_func

d_max = 100
T_max = 100
list_tasks = {'T1': (80.88147193690499, 38),
'T2': (78.10548599619733, 37),
'T3': (56.8176146374026, 70),
'T4': (71.82255047676631, 53),
'T5': (50.57013243716313, 85),
'T6': (8.487020827987346, 44),
'T7': (3.687324876871634, 100),
'T8': (46.036596968210276, 91),
'T9': (51.739543589066464, 63),
'T10': (4.4709542768266335, 66),
'T11': (45.76457021042237, 79),
'T12': (38.777878883708475, 58),
'T13': (69.64960295397435, 87),
'T14': (48.48684975493916, 77),
'T15': (60.1381733683944, 93),
'T16': (96.79707555124712, 100),
'T17': (98.7827657800577, 74),
'T18': (54.044844675854705, 62),
'T19': (68.47999943000718, 73),
'T20': (63.33439774634873, 32),
'T21': (62.74856924245211, 32),
'T22': (66.01759734839521, 7),
'T23': (1.1471855451022805, 52),
'T24': (91.59190748689802, 55),
'T25': (35.93284333519174, 24),
'T26': (20.083137768266024, 3),
'T27': (52.17236559757006, 57),
'T28': (93.27819802845372, 100),
'T29': (67.51522084747941, 68),
'T30': (47.04049877673236, 64),
'T31': (35.02137569578472, 93),
'T32': (10.545883091737485, 45),
'T33': (25.57265259651773, 94),
'T34': (86.60755981495221, 29),
'T35': (22.144407883961147, 44),
'T36': (41.672688192694494, 30),
'T37': (6.099921575386991, 62),
'T38': (15.963149657443354, 42),
'T39': (90.82048384733025, 91),
'T40': (49.55579393454589, 34),
'T41': (32.444862051741865, 32),
'T42': (23.28872500249829, 37),
'T43': (48.80234433062056, 48),
'T44': (78.03931365092028, 43),
'T45': (71.76874711716896, 36),
'T46': (53.314887016819725, 68),
'T47': (82.36458166940965, 66),
'T48': (70.56753954274501, 94),
'T49': (47.56847753653343, 30),
'T50': (55.17533177803523, 67)}

list_robots = {'R1': (37.26191821043129, 3),
'R2': (91.12863440416477, 72),
'R3': (48.99455320431827, 48),
'R4': (70.97440611196498, 99),
'R5': (95.67771224753184, 77),
'R6': (63.32196933581883, 46),
'R7': (55.56998647202327, 100),
'R8': (10.43861187575147, 26),
'R9': (31.445674622001697, 57),
'R10': (56.75671158884044, 20),
'R11': (2.4482597933774275, 80),
'R12': (32.15349849473439, 56),
'R13': (5.184133057595042, 42),
'R14': (19.00093887716302, 86),
'R15': (9.14072554853348, 14)}

list_allocation = {'T1': [('R10', 95), ('R3', 96)],
'T2': [('R9', 43)],
'T3': [('R6', 35)],
'T4': [('R5', 23)],
'T5': [('R3', 0)],
'T6': [('R13', 28), ('R3', 63)],
'T7': [('R12', 100)],
'T8': [('R15', 39), ('R10', 26)],
'T9': [('R10', 80), ('R4', 95)],
'T10': [('R10', 1), ('R10', 39)],
'T11': [('R12', 62), ('R2', 28)],
'T12': [('R6', 18), ('R10', 38)],
'T13': [('R3', 18)],
'T14': [('R5', 74)],
'T15': [('R13', 18)],
'T16': [('R14', 66)],
'T17': [('R8', 70), ('R2', 46)],
'T18': [('R4', 16), ('R2', 64)],
'T19': [('R12', 76), ('R11', 93)],
'T20': [('R3', 46), ('R13', 2)],
'T21': [('R12', 67), ('R9', 61)],
'T22': [('R14', 53)],
'T23': [('R3', 43)],
'T24': [('R2', 94)],
'T25': [('R8', 87), ('R3', 74)],
'T26': [('R7', 31)],
'T27': [('R2', 33)],
'T28': [('R3', 97), ('R3', 73)],
'T29': [('R13', 81), ('R4', 57)],
'T30': [('R13', 66)],
'T31': [('R9', 37)],
'T32': [('R3', 77)],
'T33': [('R2', 23)],
'T34': [('R9', 35), ('R13', 83)],
'T35': [('R2', 89)],
'T36': [('R10', 3)],
'T37': [('R1', 86), ('R3', 11)],
'T38': [('R12', 98), ('R1', 50)],
'T39': [('R7', 6)],
'T40': [('R14', 22), ('R6', 50)],
'T41': [('R7', 90)],
'T42': [('R3', 39)],
'T43': [('R7', 84)],
'T44': [('R3', 98)],
'T45': [('R4', 0)],
'T46': [('R15', 31)],
'T47': [('R15', 18)],
'T48': [('R10', 58)],
'T49': [('R1', 85), ('R3', 75)],
'T50': [('R2', 18), ('R7', 83)]}

list_battery = {'R1': 6,
'R2': 12,
'R3': 33,
'R4': 82,
'R5': 5,
'R6': 85,
'R7': 49,
'R8': 28,
'R9': 69,
'R10': 16,
'R11': 67,
'R12': 23,
'R13': 96,
'R14': 1,
'R15': 67}
Allocations, Totaldistance, Totaltime, TotalBattery = general_func(0.33,0.33,0.33,list_tasks,list_battery,list_robots,list_allocation,T_max,d_max)
print("Output of allocations")
print(Allocations)
print("Total traveled distance by robots")
print(Totaldistance)
print("Total execution time of tasks")
print(Totaltime)
print("The sum of all battery levels after performing all the tasks")
print(TotalBattery)